(this.webpackJsonp=this.webpackJsonp||[]).push([["paynl-payment"],{"5Vis":function(e,t){e.exports='{% block sw_data_grid %}\n    <div class="sw-data-grid" :class="classes">\n\n        {% block sw_data_grid_wrapper %}\n            <div class="sw-data-grid__wrapper" ref="wrapper">\n                {% block sw_data_grid_bulk %}\n                    <div v-if="selectionCount > 0"\n                         class="sw-data-grid__bulk">\n                        {% block sw_data_grid_bulk_selected_count %}\n                            <span class="sw-data-grid__bulk-selected sw-data-grid__bulk-selected-label">{{ $tc(\'global.sw-data-grid.labelSelectionCount\') }}</span>\n                            <span class="sw-data-grid__bulk-selected sw-data-grid__bulk-selected-count">{{ selectionCount }}</span>\n                        {% endblock %}\n\n                        {% block sw_data_grid_bulk_selected_actions %}\n                            <span class="sw-data-grid__bulk-selected bulk-link">\n                                <slot name="bulk">{% block sw_data_grid_bulk_selected_actions_content %}{% endblock %}</slot>\n                            </span>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n\n                {% block sw_data_grid_bulk_modals %}\n                    <slot name="bulk-modals">\n                        {% block sw_data_grid_slot_bulk_modals %}{% endblock %}\n                    </slot>\n                {% endblock %}\n\n                {% block sw_data_grid_table %}\n                    <table class="sw-data-grid__table" ref="table">\n\n                        {% block sw_data_grid_header %}\n                            <thead v-if="showHeader" class="sw-data-grid__header">\n\n                                {% block sw_data_grid_header_row %}\n                                    <tr class="sw-data-grid__row">\n\n                                        {% block sw_data_grid_header_cell_selection %}\n                                            <th v-if="showSelection" class="sw-data-grid__cell sw-data-grid__cell--header sw-data-grid__cell--selection">\n                                                {% block sw_data_grid_header_cell_selection_content %}\n                                                    <div class="sw-data-grid__cell-content">\n                                                        {% block sw_data_grid_select_all_checkbox %}\n                                                            <sw-checkbox-field\n                                                                v-model="allSelectedChecked"\n                                                                @change="selectAll"\n                                                                class="sw-data-grid__select-all">\n                                                            </sw-checkbox-field>\n                                                        {% endblock %}\n                                                    </div>\n                                                {% endblock %}\n                                            </th>\n                                        {% endblock %}\n\n                                        {% block sw_data_grid_header_columns %}\n                                            <th v-for="(column, columnIndex) in currentColumns"\n                                                v-show="column.visible"\n                                                @click="onClickHeaderCell($event, column)"\n                                                class="sw-data-grid__cell sw-data-grid__cell--header sw-data-grid__cell--property"\n                                                :class="getHeaderCellClasses(column, columnIndex)"\n                                                :style="{ width: column.width, minWidth: column.width }"\n                                                :key="`${column.property}-${columnIndex}`"\n                                                ref="column">\n                                                {% block sw_data_grid_header_columns_content %}\n                                                    <div class="sw-data-grid__cell-content">\n\n                                                        {% block sw_data_grid_header_columns_icon %}\n                                                            <sw-icon v-if="column.iconLabel"\n                                                                    :name="column.iconLabel">\n                                                                {{ column.label }}\n                                                            </sw-icon>\n                                                        {% endblock %}\n\n                                                        {% block sw_data_grid_header_columns_label %}\n                                                            <template v-else>\n                                                                {{ column.label }}\n                                                            </template>\n                                                        {% endblock %}\n\n                                                        {% block sw_data_grid_column_actions %}\n                                                            <sw-context-button v-if="allowColumnEdit && !isInlineEditActive" class="sw-data-grid__action-edit-column">\n                                                                {% block sw_data_grid_column_actions_hide %}\n                                                                    <sw-context-menu-item @click="hideColumn(columnIndex)" :disabled="column.primary" variant="danger">\n                                                                        {{ $tc(\'global.sw-data-grid.labelColumnHide\') }}\n                                                                    </sw-context-menu-item>\n                                                                {% endblock %}\n                                                            </sw-context-button>\n                                                        {% endblock %}\n\n                                                        {% block sw_data_grid_sort_indicator %}\n                                                            <span v-if="column.sortable && currentSortBy === column.dataIndex" class="sw-data-grid__sort-indicator">\n                                                                {% block sw_data_grid_sort_indicator_transition %}\n                                                                    <transition name="sort-indicator" mode="out-in">\n                                                                        {% block sw_data_grid_sort_indicator_icon_asc %}\n                                                                            <sw-icon key="ASC" name="small-arrow-small-up" size="16px" v-if="currentSortDirection === \'ASC\'"></sw-icon>\n                                                                        {% endblock %}\n\n                                                                        {% block sw_data_grid_sort_indicator_icon_desc %}\n                                                                            <sw-icon key="DESC" name="small-arrow-small-down" size="16px" v-else></sw-icon>\n                                                                        {% endblock %}\n                                                                    </transition>\n                                                                {% endblock %}\n                                                            </span>\n                                                        {% endblock %}\n                                                    </div>\n                                                {% endblock %}\n\n                                                {% block sw_data_grid_header_columns_resize %}\n                                                    <span v-if="column.allowResize"\n                                                          @mousedown="onStartResize($event, column, columnIndex)"\n                                                          class="sw-data-grid__cell-resize">\n                                                    </span>\n                                                {% endblock %}\n                                            </th>\n                                        {% endblock %}\n\n                                        {% block sw_data_grid_header_cell_spacer %}\n                                            <th v-if="hasResizeColumns"\n                                                aria-hidden="true"\n                                                class="sw-data-grid__cell sw-data-grid__cell--header sw-data-grid__cell-spacer">\n                                                <div class="sw-data-grid__cell-content"></div>\n                                            </th>\n                                        {% endblock %}\n\n                                        {% block sw_data_grid_header_cell_actions %}\n                                            <th v-if="showActions"\n                                                class="sw-data-grid__cell sw-data-grid__cell--header sw-data-grid__cell--actions sw-data-grid__cell-settings"\n                                                :class="{ \'is--loading\': loading }">\n                                                {% block sw_data_grid_header_cell_actions_content %}\n                                                    <div class="sw-data-grid__cell-content">\n                                                        {% block sw_data_grid_settings %}\n                                                            <sw-data-grid-settings\n                                                                v-if="showSettings"\n                                                                :columns="currentColumns"\n                                                                :compact="compact"\n                                                                :previews="previews"\n                                                                :enablePreviews="hasPreviewSlots"\n                                                                :disabled="isInlineEditActive"\n                                                                @change-compact-mode="onChangeCompactMode"\n                                                                @change-preview-images="onChangePreviews"\n                                                                @change-column-visibility="onChangeColumnVisibility"\n                                                                @change-column-order="onChangeColumnOrder">\n                                                            </sw-data-grid-settings>\n                                                        {% endblock %}\n                                                    </div>\n                                                {% endblock %}\n                                            </th>\n                                        {% endblock %}\n                                     </tr>\n                                {% endblock %}\n                            </thead>\n                        {% endblock %}\n\n                        {% block sw_data_grid_body %}\n                            <tbody v-if="!loading" class="sw-data-grid__body">\n\n                                {% block sw_data_grid_body_row %}\n                                    <tr v-for="(item, itemIndex) in records"\n                                        class="sw-data-grid__row"\n                                        :class="getRowClasses(item, itemIndex)"\n                                        :key="item.id">\n\n                                        {% block sw_data_grid_body_cell_selection %}\n                                            <td v-if="showSelection" class="sw-data-grid__cell sw-data-grid__cell--selection">\n                                                {% block sw_data_grid_body_cell_selection_content %}\n                                                    <div class="sw-data-grid__cell-content">\n                                                        {% block sw_data_grid_select_item_checkbox %}\n                                                            <sw-checkbox-field\n                                                                :value="isSelected(item.id)"\n                                                                @change="selectItem($event, item)">\n                                                            </sw-checkbox-field>\n                                                        {% endblock %}\n                                                    </div>\n                                                {% endblock %}\n                                            </td>\n                                        {% endblock %}\n\n                                        {% block sw_data_grid_body_columns %}\n                                            <td v-for="(column, columnIndex) in currentColumns"\n                                                v-show="column.visible"\n                                                class="sw-data-grid__cell"\n                                                :class="getCellClasses(column)"\n                                                :key="`${item.id}-${columnIndex}`"\n                                                @dblclick="onDbClickCell(item)">\n                                                {% block sw_data_grid_body_columns_content %}\n                                                    <div class="sw-data-grid__cell-content">\n\n                                                        {% block sw_data_grid_preview_slot %}\n                                                            <slot v-if="previews && !isInlineEdit(item)"\n                                                                  :name="`preview-${column.property}`"\n                                                                  v-bind="{ item, column, compact }">\n                                                            </slot>\n                                                        {% endblock %}\n\n                                                        {% block sw_data_grid_columns_slot %}\n                                                            <slot :name="`column-${column.property}`"\n                                                                  v-bind="{ item, itemIndex, column, columnIndex, compact, isInlineEdit: (isInlineEdit(item) && column.hasOwnProperty(\'inlineEdit\')) }">\n\n                                                                {% block sw_data_grid_columns_inline_edit %}\n                                                                    <template v-if="isInlineEdit(item) && column.hasOwnProperty(\'inlineEdit\')">\n                                                                        {% block sw_data_grid_columns_render_inline_edit %}\n                                                                            <sw-data-grid-inline-edit\n                                                                                :column="column"\n                                                                                :compact="compact"\n                                                                                :value="item[column.property]"\n                                                                                @input="item[column.property] = $event">\n                                                                            </sw-data-grid-inline-edit>\n                                                                        {% endblock %}\n                                                                    </template>\n                                                                {% endblock %}\n\n                                                                {% block sw_data_grid_columns_value %}\n                                                                    <template v-else>\n                                                                        {% block sw_data_grid_columns_render_router_link %}\n                                                                            <router-link v-if="column.routerLink"\n                                                                                         class="sw-data-grid__cell-value"\n                                                                                         :to="{ name: column.routerLink, params: { id: item.id } }">\n                                                                                {{ renderColumn(item, column) }}\n                                                                            </router-link>\n                                                                        {% endblock %}\n                                                                        {% block sw_data_grid_columns_render_value %}\n                                                                            <span class="sw-data-grid__cell-value" v-else>\n                                                                                <span v-if="column.property === \'links\'">\n                                                                                    <a target="_blank" class="sw-data-grid__cell-value" href="https://admin.pay.nl">\n                                                                                        <sw-icon name="default-web-link" color="#1abc9c"></sw-icon>\n                                                                                    </a>\n                                                                                    <router-link class="sw-data-grid__cell-value"\n                                                                                                 :to="{ name: \'sw.customer.detail.base\', params: { id: getCustomerId(item) } }">\n                                                                                        <sw-icon name="default-avatar-single" color="#fc427b"></sw-icon>\n                                                                                    </router-link>\n                                                                                    <router-link class="sw-data-grid__cell-value"\n                                                                                                 :to="{ name: \'sw.order.detail.base\', params: { id: getOrderId(item) }}">\n                                                                                        <sw-icon name="default-shopping-basket" color="#3498db"></sw-icon>\n                                                                                    </router-link>\n                                                                                </span>\n                                                                                <span v-else>\n                                                                                    {{ renderColumn(item, column) }}\n                                                                                </span>\n                                                                            </span>\n                                                                        {% endblock %}\n                                                                    </template>\n                                                                {% endblock %}\n                                                            </slot>\n                                                        {% endblock %}\n                                                    </div>\n                                                {% endblock %}\n                                            </td>\n                                        {% endblock %}\n\n                                        {% block sw_data_grid_body_cell_spacer %}\n                                            <td v-if="hasResizeColumns"\n                                                aria-hidden="true"\n                                                class="sw-data-grid__cell sw-data-grid__cell-spacer"\n                                                @dblclick="onDbClickCell(item)">\n                                                <div class="sw-data-grid__cell-content"></div>\n\n                                            </td>\n                                        {% endblock %}\n\n                                        {% block sw_data_grid_body_cell_actions %}\n                                            <td v-if="showActions" class="sw-data-grid__cell sw-data-grid__cell--actions">\n                                                {% block sw_data_grid_body_cell_actions_content %}\n                                                    <div class="sw-data-grid__cell-content">\n\n                                                        {% block sw_data_grid_inline_edit_actions %}\n                                                            <template v-if="isInlineEditActive && currentInlineEditId === item.id">\n\n                                                                {% block sw_data_grid_inline_edit_actions_cancel %}\n                                                                    <sw-button @click="onClickCancelInlineEdit(item)"\n                                                                               class="sw-data-grid__inline-edit-cancel"\n                                                                               size="x-small"\n                                                                               :title="$tc(\'global.sw-data-grid.titleButtonInlineEditCancel\')"\n                                                                               :aria-label="$tc(\'global.sw-data-grid.titleButtonInlineEditCancel\')"\n                                                                               square>\n                                                                        {% block sw_data_grid_inline_edit_actions_cancel_icon %}\n                                                                            <sw-icon name="small-default-x-line-small" size="14px"></sw-icon>\n                                                                        {% endblock %}\n                                                                    </sw-button>\n                                                                {% endblock %}\n\n                                                                {% block sw_data_grid_inline_edit_actions_save %}\n                                                                    <sw-button @click="onClickSaveInlineEdit(item)"\n                                                                               class="sw-data-grid__inline-edit-save"\n                                                                               variant="primary"\n                                                                               size="x-small"\n                                                                               :title="$tc(\'global.sw-data-grid.titleButtonInlineEditSave\')"\n                                                                               :aria-label="$tc(\'global.sw-data-grid.titleButtonInlineEditSave\')"\n                                                                               square>\n                                                                        {% block sw_data_grid_inline_edit_actions_save_icon %}\n                                                                            <sw-icon name="small-default-checkmark-line-small" size="14px"></sw-icon>\n                                                                        {% endblock %}\n                                                                    </sw-button>\n                                                                {% endblock %}\n                                                            </template>\n                                                        {% endblock %}\n\n                                                        {% block sw_data_grid_body_cell_actions %}\n                                                            <sw-context-button v-else class="sw-data-grid__actions-menu">\n                                                                <slot name="actions" :item="item">\n                                                                    {% block sw_data_grid_slot_actions %}{% endblock %}\n                                                                </slot>\n                                                            </sw-context-button>\n                                                        {% endblock %}\n\n                                                        {% block sw_data_grid_body_cell_action_modals %}\n                                                            <slot name="action-modals" :item="item">\n                                                                {% block sw_data_grid_slot_action_modals %}{% endblock %}\n                                                            </slot>\n                                                        {% endblock %}\n                                                    </div>\n                                                {% endblock %}\n                                            </td>\n                                        {% endblock %}\n                                    </tr>\n                                {% endblock %}\n                            </tbody>\n                        {% endblock %}\n\n                        {% block sw_data_grid_skeleton %}\n                            <sw-data-grid-skeleton\n                                v-else\n                                :showSelection="showSelection"\n                                :showActions="showActions"\n                                :currentColumns="currentColumns"\n                                :hasResizeColumns="hasResizeColumns"\n                                :itemAmount="skeletonItemAmount"\n                                class="sw-data-grid__body">\n                            </sw-data-grid-skeleton>\n                        {% endblock %}\n                    </table>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block sw_data_grid_pagination %}\n            <div class="sw-data-grid__pagination">\n                {% block sw_data_grid_pagination_inner %}\n                    <slot name="pagination">{% block sw_data_grid_slot_pagination %}{% endblock %}</slot>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"71ZH":function(e,t,n){},D0kB:function(e,t){e.exports='{% block transaction_list %}\n    <sw-page class="transaction-list">\n        <template slot="content">\n            {% block transaction_list_content %}\n            <transactions-list\n                v-if="transactions"\n                :items="transactions"\n                :dataSource="test"\n                :repository="repository"\n                :showSelection="false"\n                :columns="columns"\n                detailRoute="swag.bundle.detail">\n            </transactions-list>\n            {% endblock %}\n        </template>\n    </sw-page>\n{% endblock %}\n'},FNZd:function(e){e.exports=JSON.parse('{"demoSnippet":"Ich bin eine Demo."}')},"L9t/":function(e,t,n){"use strict";n.r(t);var i=n("5Vis"),s=n.n(i);n("tSgH");const{Component:l}=Shopware,a=Shopware.Utils;l.register("data-grid",{template:s.a,props:{dataSource:{type:Array,required:!0},columns:{type:Array,required:!0},identifier:{type:String,required:!1,default:""},showSelection:{type:Boolean,default:!0,required:!1},showActions:{type:Boolean,default:!0,required:!1},showHeader:{type:Boolean,default:!0,required:!1},showSettings:{type:Boolean,default:!1,required:!1},fullPage:{type:Boolean,default:!1,required:!1},allowInlineEdit:{type:Boolean,default:!1,required:!1},allowColumnEdit:{type:Boolean,default:!1,required:!1},isLoading:{type:Boolean,default:!1,required:!1},skeletonItemAmount:{type:Number,required:!1,default:7},sortBy:{type:String,required:!1},sortDirection:{type:String,required:!1,default:"ASC"},naturalSorting:{type:Boolean,required:!1,default:!1},compactMode:{type:Boolean,required:!1,default:!0},showPreviews:{type:Boolean,required:!1,default:!0}},data(){return{records:this.dataSource,currentSortBy:this.sortBy,currentSortDirection:this.sortDirection,currentNaturalSorting:this.naturalSorting,loading:this.isLoading,currentColumns:[],columnIndex:null,selection:{},allSelectedChecked:!1,originalTarget:null,compact:this.compactMode,previews:this.showPreviews,isInlineEditActive:!1,currentInlineEditId:"",hasPreviewSlots:!1,hasResizeColumns:!1,_hasColumnsResize:!1,_isResizing:!1}},created(){this.createdComponent()},mounted(){this.mountedComponent()},computed:{classes(){return{"is--compact":this.compact,"sw-data-grid--full-page":this.fullPage,"sw-data-grid--actions":this.showActions}},localStorageItemKey(){return`${this.identifier}-grid-columns`},selectionCount(){return Object.values(this.selection).length}},watch:{columns(){this.initGridColumns()},sortBy(){this.currentSortBy=this.sortBy},sortDirection(){this.currentSortDirection=this.sortDirection},naturalSorting(){this.currentNaturalSorting=this.naturalSorting},isLoading(){this.loading=this.isLoading},dataSource(){this.records=this.dataSource},showSelection(){this.selection=this.showSelection?this.selection:{}},records(){this.selection={}},compactMode(){this.compact=this.compactMode}},methods:{createdComponent(){this.initGridColumns()},mountedComponent(){this.trackScrollX(),this.findPreviewSlots(),this.$device.onResize({listener:this.trackScrollX.bind(this),component:this})},initGridColumns(){let e=this.getDefaultColumns();if(this.identifier){const t=window.localStorage.getItem(this.localStorageItemKey);null!==t&&(e=JSON.parse(t))}this.currentColumns=e,this.findResizeColumns()},findResizeColumns(){this.hasResizeColumns=this.currentColumns.some(e=>e.allowResize)},findPreviewSlots(){const e=Array.from(Object.keys(this.$scopedSlots));this.hasPreviewSlots=e.some(e=>e.includes("preview-"))},getDefaultColumns(){return this.columns.map(e=>{if(!e.property)throw new Error(`[${this.$options.name}] Please specify a "property" to render a column.`);return e.dataIndex||(e.dataIndex=e.property),Object.assign({},{width:"auto",allowResize:!1,sortable:!0,visible:!0,align:"left"},e)})},saveGridColumns(){this.identifier&&window.localStorage.setItem(this.localStorageItemKey,JSON.stringify(this.currentColumns))},getHeaderCellClasses:(e,t)=>[{"sw-data-grid__cell--sortable":e.dataIndex,"sw-data-grid__cell--icon-label":e.iconLabel},`sw-data-grid__cell--${t}`],getRowClasses(e,t){return[{"is--inline-edit":this.isInlineEdit(e),"is--selected":this.isSelected(e.id)},`sw-data-grid__row--${t}`]},getCellClasses:e=>[`sw-data-grid__cell--${e.property.replace(/\./g,"-")}`,`sw-data-grid__cell--align-${e.align}`],onChangeCompactMode(e){this.compact=e},onChangePreviews(e){this.previews=e},onChangeColumnVisibility(e,t){this.currentColumns[t].visible=e,this.saveGridColumns()},onChangeColumnOrder(e,t){this.currentColumns=this.orderColumns(this.currentColumns,e,t),this.saveGridColumns()},orderColumns:(e,t,n)=>(e.splice(n,0,e.splice(t,1)[0]),e),enableInlineEdit(){this.isInlineEditActive=this.hasColumnWithInlineEdit(),this.setAllColumnElementWidths()},hasColumnWithInlineEdit(){return this.currentColumns.some(e=>e.hasOwnProperty("inlineEdit"))},isInlineEdit(e){return this.isInlineEditActive&&this.currentInlineEditId===e.id},disableInlineEdit(){this.isInlineEditActive=!1,this.currentInlineEditId=""},hideColumn(e){this.currentColumns[e].visible=!1,this.saveGridColumns()},renderColumn(e,t){const n=t.property.split(".");n.splice(n.length-1,0,"translated");const i=a.get(e,n);return i||a.get(e,t.property)},getOrderId:e=>e.orderId,getCustomerId:e=>e.customerId,selectAll(e){this.$delete(this.selection),this.records.forEach(t=>{this.isSelected(t.id)!==e&&this.selectItem(e,t)}),this.allSelectedChecked=e,this.$emit("select-all-items",this.selection)},selectItem(e,t){const n=this.selection;!0===e?this.$set(this.selection,t.id,t):!e&&n[t.id]&&this.$delete(this.selection,t.id),this.checkSelection(),this.$emit("select-item",this.selection,t,e)},isSelected(e){return void 0!==this.selection[e]},checkSelection(){let e=!0;this.records.forEach(t=>{void 0===this.selection[t.id]&&(e=!1)}),this.allSelectedChecked=e},resetSelection(){this.selection={},this.allSelectedChecked=!1},onClickSaveInlineEdit(e){this.$emit("inline-edit-assign"),this.save(e),this.disableInlineEdit()},onClickCancelInlineEdit(e){this.$emit("inline-edit-assign"),this.revert(e),this.disableInlineEdit()},onDbClickCell(e){this.allowInlineEdit&&(this.enableInlineEdit(),this.currentInlineEditId=e.id)},onClickHeaderCell(e,t){this._isResizing||t.sortable&&(e.target.closest(".sw-context-button")||e.target.closest(".sw-data-grid__cell-resize")||(this.setAllColumnElementWidths(),this.sort(t)))},onStartResize(e,t,n){this.resizeX=e.pageX,this.originalTarget=e.target,this.columnIndex=n,this._isResizing=!0,this._handleColumnResizeClasses("add"),this.enableResizeMode(),window.addEventListener("mousemove",this.onResize,!1),window.addEventListener("mouseup",this.onStopResize,!1)},onStopResize(){this.resizeX=null,this._handleColumnResizeClasses("remove"),this.currentColumns[this.columnIndex].width=`${this._currentColumnWidth}px`,this._currentColumnWidth=null,this.originalTarget=null,this.columnIndex=null,a.debounce(()=>{this._isResizing=!1},50)(),window.removeEventListener("mouseup",this.onStopResize,!1),window.removeEventListener("mousemove",this.onResize,!1)},onResize(e){if(null===this.resizeX)return;const t=this.originalTarget.parentNode,n=e.pageX,i=n-this.resizeX,s=t.offsetWidth+i;this.resizeX=n,this.trackScrollX(),s<65||(t.style.width=`${s}px`,t.style.minWidth=`${s}px`,this._currentColumnWidth=s)},_handleColumnResizeClasses(e){const t=this.originalTarget,n=t.parentNode;this.$el.classList[e]("is--resizing"),t.classList[e]("is--column-resizing"),n.classList[e]("is--column-resizing"),n.nextElementSibling.classList[e]("is--column-resizing")},enableResizeMode(){this._hasColumnsResize||(this.setAllColumnElementWidths(),this.$refs.table.style.tableLayout="fixed",this._hasColumnsResize=!0)},setAllColumnElementWidths(){this.$refs.column.forEach(e=>{const t=`${e.offsetWidth}px`;e.offsetWidth&&(e.style.width=t,e.style.minWidth=t)})},trackScrollX(){const e=this.$el,t=this.$refs.wrapper;t.clientWidth<t.scrollWidth?e.classList.add("is--scroll-x"):e.classList.remove("is--scroll-x")},save(e){this.$emit("inline-edit-save",e)},revert(e){this.$emit("inline-edit-cancel",e)},sort(e){this.$emit("column-sort",e)}}});var o=n("S4se"),d=n.n(o);const{Component:r}=Shopware,{Criteria:c}=Shopware.Data;r.extend("transactions-list","data-grid",{template:d.a,props:{detailRoute:{type:String,required:!1},repository:{required:!0,type:Object},items:{type:Array,required:!1,default:null},dataSource:{type:[Array,Object],required:!1},showSettings:{type:Boolean,default:!0,required:!1},fullPage:{type:Boolean,default:!0,required:!1},allowInlineEdit:{type:Boolean,default:!0,required:!1},allowColumnEdit:{type:Boolean,default:!0,required:!1},sortIsAllowed:{type:Boolean,default:!0,required:!1}},data:()=>({deleteId:null,showBulkDeleteModal:!1,isBulkLoading:!1,page:1,limit:25,total:10}),watch:{items(){this.applyResult(this.items)}},methods:{createdComponent(){this.$super.createdComponent(),this.items&&this.applyResult(this.items)},applyResult(e){this.records=e,this.total=e.total,this.page=e.criteria.page,this.limit=e.criteria.limit,this.loading=!1,this.$emit("update-records",e)},deleteItem(e){return this.deleteId=null,this.repository.delete(e,this.items.context).then(()=>(this.resetSelection(),this.doSearch()))},deleteItems(){this.isBulkLoading=!0;const e=[];return Object.values(this.selection).forEach(t=>{e.push(this.repository.delete(t.id,this.items.context))}),Promise.all(e).then(()=>this.deleteItemsFinish()).catch(()=>this.deleteItemsFinish())},deleteItemsFinish(){return this.resetSelection(),this.isBulkLoading=!1,this.showBulkDeleteModal=!1,this.$emit("items-delete-finish"),this.doSearch()},doSearch(){return this.loading=!0,this.repository.search(this.items.criteria,this.items.context).then(this.applyResult)},save(e){const t=this.repository.save(e,this.items.context).then(()=>this.doSearch());return this.$emit("inline-edit-save",t,e),t},revert(){const e=this.doSearch();return this.$emit("inline-edit-cancel",e),e},sort(e){if(!e.sortIsAllowed)return!1;this.items.criteria.resetSorting();let t="ASC";return this.currentSortBy===e.dataIndex&&this.currentSortDirection===t&&(t="DESC"),e.dataIndex.split(",").forEach(n=>{this.items.criteria.addSorting(c.sort(n,t,e.naturalSorting))}),this.currentSortBy=e.dataIndex,this.currentSortDirection=t,this.currentNaturalSorting=e.naturalSorting,this.$emit("column-sort",e),this.doSearch()},paginate({page:e=1,limit:t=25}){return this.items.criteria.setPage(e),this.items.criteria.setLimit(t),this.doSearch()},showDelete(e){this.deleteId=e},closeModal(){this.deleteId=null}}});var _=n("D0kB"),m=n.n(_);const{Component:u}=Shopware,{Criteria:h}=Shopware.Data;u.register("transactions-list-component",{template:m.a,inject:["repositoryFactory","context"],data:()=>({repository:null,transactions:null,test:null}),metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return[{property:"paynlTransactionId",dataIndex:"paynlTransactionId",label:this.$t("transactions-list.paynl_transaction_id"),allowResize:!0,sortIsAllowed:!0,primary:!0},{property:"paymentId",dataIndex:"paymentId",label:this.$t("transactions-list.payment_id"),sortIsAllowed:!0,allowResize:!0},{property:"amount",dataIndex:"amount",label:this.$t("transactions-list.amount"),allowResize:!0,sortIsAllowed:!0,primary:!0},{property:"currency",dataIndex:"currency",label:this.$t("transactions-list.currency"),allowResize:!0,sortIsAllowed:!0,primary:!0},{property:"createdAt",dataIndex:"createdAt",label:this.$t("transactions-list.created_at"),sortIsAllowed:!0,allowResize:!0},{property:"links",dataIndex:"links",label:this.$t("transactions-list.links"),allowResize:!0,sortIsAllowed:!1,align:"center"}]}},created(){this.repository=this.repositoryFactory.create("paynl_transactions"),this.repository.search(new h,this.context).then(e=>{this.transactions=e})}});var w=n("FNZd"),g=n("S2YU");const{Module:p}=Shopware;p.register("paynl-payment-module",{type:"plugin",name:"Paynl payment",title:"Paynl payment module",description:"Paynl payment description",color:"#62ff80",icon:"default-object-lab-flask",snippets:{"de-DE":w,"en-GB":g},routes:{list:{component:"transactions-list-component",path:"list"}},navigation:[{label:"Paynl transactions",color:"#62ff80",path:"paynl.payment.module.list",icon:"default-object-lab-flask"}]})},S2YU:function(e){e.exports=JSON.parse('{"transactions-list":{"paynl_transaction_id":"Transaction id","payment_id":"Payment id","amount":"Amount","currency":"Currency","created_at":"Created at","links":"Links"}}')},S4se:function(e,t){e.exports='{% block sw_data_grid_slot_pagination %}\n    <sw-pagination v-bind="{ page, limit, total }" :total-visible="7" @page-change="paginate"></sw-pagination>\n{% endblock %}\n\n{% block sw_data_grid_bulk_selected_actions_content %}\n    <a class="link link-danger" @click="showBulkDeleteModal = true">\n        {{ $tc(\'global.entity-components.deleteAction\') }}\n    </a>\n{% endblock %}\n\n{% block sw_data_grid_slot_bulk_modals %}\n    <sw-modal v-if="showBulkDeleteModal"\n              @modal-close="showBulkDeleteModal = false"\n              :title="$tc(\'global.entity-components.deleteTitle\')"\n              variant="small">\n        <p class="sw-data-grid__confirm-bulk-delete-text">\n            {{ $tc(\'global.entity-components.deleteMessage\', selectionCount, { count: selectionCount }) }}\n        </p>\n\n        <template #modal-footer>\n            <sw-button @click="showBulkDeleteModal = false" size="small">\n                {{ $tc(\'global.entity-components.deleteCancel\') }}\n            </sw-button>\n\n            <sw-button @click="deleteItems" variant="primary" size="small" :isLoading="isBulkLoading">\n                {{ $tc(\'global.entity-components.deleteAction\') }}\n            </sw-button>\n        </template>\n    </sw-modal>\n{% endblock %}\n\n{% block sw_data_grid_slot_actions %}\n    <slot name="detail-action" v-bind="{ item }">\n        <sw-context-menu-item class="transactions-list__context-menu-edit-action" v-if="detailRoute" :routerLink="{ name: detailRoute, params: { id: item.id } }">\n            {{ $tc(\'global.entity-components.editAction\') }}\n        </sw-context-menu-item>\n    </slot>\n\n    <slot name="more-actions" v-bind="{ item }"></slot>\n\n    <slot name="delete-action" v-bind="{ item, showDelete }">\n        <sw-context-menu-item @click="showDelete(item.id)" variant="danger">\n            {{ $tc(\'global.entity-components.deleteAction\') }}\n        </sw-context-menu-item>\n    </slot>\n{% endblock %}\n\n{% block sw_data_grid_slot_action_modals %}\n    <sw-modal v-if="deleteId === item.id" @modal-close="closeModal" :title="$tc(\'global.entity-components.deleteTitle\')" variant="small">\n        <p class="sw-listing__confirm-delete-text">\n            <slot name="delete-confirm-text" v-bind="{ item }">\n                {{ $tc(\'global.entity-components.deleteMessage\') }}\n            </slot>\n        </p>\n\n        <template #modal-footer>\n            <slot name="delete-modal-footer" v-bind="{ item }">\n                <sw-button @click="closeModal" size="small">\n                    {{ $tc(\'global.entity-components.deleteCancel\') }}\n                </sw-button>\n\n                <sw-button @click="deleteItem(item.id)" variant="primary" size="small">\n                    {{ $tc(\'global.entity-components.deleteConfirm\') }}\n                </sw-button>\n            </slot>\n        </template>\n    </sw-modal>\n{% endblock %}\n'},tSgH:function(e,t,n){var i=n("71ZH");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,n("SZ7m").default)("5c2e8970",i,!0,{})}},[["L9t/","runtime","vendors-node"]]]);